{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["bd","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","useState","error","setError","guardarFirebase","tarea","collection","add","then","docRef","console","log","id","catch","onChange","e","target","value","type","className","placeholder","onClick","preventDefault","trim","length","setTimeout","text","completed","Math","random","name","Todo","todo","editarCompleted","doc","set","map","item","delete","TodoList","filteredTodos","App","status","setFilteredTodos","useEffect","onSnapshot","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48b4e0dc.chunk.js","sourcesContent":["  import firebase from 'firebase/app';\r\n  import 'firebase/firestore';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBnOTyGyxiUevS1dWNvSjmedxT0msJogV0\",\r\n    authDomain: \"todo-list-646b9.firebaseapp.com\",\r\n    projectId: \"todo-list-646b9\",\r\n    storageBucket: \"todo-list-646b9.appspot.com\",\r\n    messagingSenderId: \"235274986043\",\r\n    appId: \"1:235274986043:web:54791fd6183b1f68ef321e\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const bd = fb.firestore();","import {bd} from '../firebase-config';\r\nimport { useState } from 'react';\r\n\r\nconst Form = ({ setTodos, todos, inputText, setInputText, setStatus }) => {\r\n    // const {setTodos} = props\r\n\r\nconst [error, setError] = useState(false)\r\n\r\n    const submitTodoHandler = e => {\r\n     \r\n      \r\n\r\n        e.preventDefault();\r\n\r\n        if (inputText.trim().length === 0) {\r\n            setError(true);\r\n            setTimeout(() => {\r\n              setError(false);\r\n            }, 1200);\r\n            return;\r\n          }\r\n          setError(false);\r\n\r\n        setTodos([...todos, {\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n        }])\r\n        guardarFirebase({\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n          })\r\n        setInputText('')\r\n    }\r\n\r\n    const inputTextHandler = e => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    \r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n\r\n    //firebase\r\n    const guardarFirebase = tarea =>{\r\n        // Add a new document with a generated id.\r\nbd.collection(\"todos\").add(tarea)\r\n.then((docRef) => {\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n})\r\n.catch((error) => {\r\n    console.error(\"Error adding document: \", error);\r\n});\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n   \r\n            <div>\r\n            <input\r\n                onChange={inputTextHandler}\r\n                type=\"text\"\r\n                value={inputText}\r\n                className=\"todo-input\"\r\n                placeholder={error ? \"¡Escríbeme!\" : \"¿Qué debes hacer?\"}\r\n\r\n            />\r\n            <button\r\n                // disabled={inputText.trim().length === 0}\r\n                onClick={submitTodoHandler}\r\n                className=\"todo-button\"\r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            </div>\r\n            <div className=\"select\">\r\n                <select\r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                    onChange={statusHandler}\r\n                >\r\n                    <option value=\"all\">Todas</option>\r\n                    <option value=\"completed\">Completas</option>\r\n                    <option value=\"uncompleted\">Incompletas</option>\r\n                </select>\r\n            </div>\r\n            \r\n            \r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import {bd} from '../firebase-config';\r\n\r\nconst Todo = ({ todo, setTodos, todos }) => {\r\n\r\n\r\n    const deleteHandler = () => {\r\n        // setTodos(todos.filter(tarea => tarea.id !== todo.id))\r\n        bd.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if (todo.id === item.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n        editarCompleted(todo)\r\n    };\r\n\r\n\r\n    const editarCompleted = (tarea) =>{\r\n        bd.collection(\"todos\").doc(tarea.id).set({\r\n            ...tarea, completed: !tarea.completed\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{todo.text}</li>\r\n            <button onClick={completeHandler} className={`complete-btn ${todo.completed ? 'completed-icon' : ''}`}>\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import Todo from './Todo'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {filteredTodos.map(todo => (\r\n                         <Todo \r\n                            todo={todo}  \r\n                            key={todo.id}  \r\n                            setTodos={setTodos}\r\n                            todos={todos}\r\n                        />  \r\n                    ))} \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\nimport {bd} from './firebase-config';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  const traerDesdeFirebase = () =>{\n    bd.collection(\"todos\").onSnapshot((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          docs.push({...doc.data(), id:doc.id})\n      });\n      setTodos(docs);\n  });\n  }\n\n  useEffect(traerDesdeFirebase, [])\n\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch (status) {\n        case 'completed':\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n          break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos);\n\n      }\n    }\n\n    //Local storage\n    // const saveLocalTodos = () => {\n    //   localStorage.setItem('todos', JSON.stringify(todos))\n    // }\n\n    filteredHandler();\n    // saveLocalTodos();\n  }, [status, todos])\n\n\n  return (\n    <div>\n      <header>\n        <h1>- Todo List -</h1>\n      </header>\n      <div className=\"container\">\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './firebase-config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}