{"version":3,"sources":["firebase-config.js","components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["bd","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Form","setTodos","todos","inputText","setInputText","setStatus","guardarFirebase","tarea","collection","add","then","docRef","console","log","id","catch","error","onChange","e","target","value","type","className","disabled","trim","length","onClick","preventDefault","text","completed","Math","random","name","Todo","todo","editarCompleted","doc","set","map","item","delete","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","get","querySnapshot","docs","forEach","push","data","filter","filteredHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b2fc2f.chunk.js","sourcesContent":["  import firebase from 'firebase/app';\r\n  import 'firebase/firestore';\r\n\r\n  // Your web app's Firebase configuration\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyBnOTyGyxiUevS1dWNvSjmedxT0msJogV0\",\r\n    authDomain: \"todo-list-646b9.firebaseapp.com\",\r\n    projectId: \"todo-list-646b9\",\r\n    storageBucket: \"todo-list-646b9.appspot.com\",\r\n    messagingSenderId: \"235274986043\",\r\n    appId: \"1:235274986043:web:54791fd6183b1f68ef321e\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const bd = fb.firestore();","import {bd} from '../firebase-config';\r\n\r\nconst Form = ({ setTodos, todos, inputText, setInputText, setStatus }) => {\r\n    // const {setTodos} = props\r\n\r\n    const submitTodoHandler = e => {\r\n        e.preventDefault();\r\n        setTodos([...todos, {\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n        }])\r\n        guardarFirebase({\r\n            text: inputText,\r\n            completed: false,\r\n            id: Math.random() * 10000\r\n          })\r\n        setInputText('')\r\n    }\r\n\r\n    const inputTextHandler = e => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    \r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n\r\n    //firebase\r\n    const guardarFirebase = tarea =>{\r\n        // Add a new document with a generated id.\r\nbd.collection(\"todos\").add(tarea)\r\n.then((docRef) => {\r\n    console.log(\"Document written with ID: \", docRef.id);\r\n})\r\n.catch((error) => {\r\n    console.error(\"Error adding document: \", error);\r\n});\r\n    }\r\n\r\n\r\n    return (\r\n        <form>\r\n            <input\r\n                onChange={inputTextHandler}\r\n                type=\"text\"\r\n                value={inputText}\r\n                className=\"todo-input\"\r\n            />\r\n            <button\r\n                disabled={inputText.trim().length === 0}\r\n                onClick={submitTodoHandler}\r\n                className=\"todo-button\"\r\n                type=\"submit\"\r\n            >\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select\r\n                    name=\"todos\"\r\n                    className=\"filter-todo\"\r\n                    onChange={statusHandler}\r\n                >\r\n                    <option value=\"all\">Todas</option>\r\n                    <option value=\"completed\">Completas</option>\r\n                    <option value=\"uncompleted\">Incompletas</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import {bd} from '../firebase-config';\r\n\r\nconst Todo = ({ todo, setTodos, todos }) => {\r\n\r\n\r\n    const deleteHandler = () => {\r\n        // setTodos(todos.filter(tarea => tarea.id !== todo.id))\r\n        bd.collection(\"todos\").doc(todo.id).delete().then(() => {\r\n            console.log(\"Document successfully deleted!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error removing document: \", error);\r\n        });\r\n    }\r\n\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if (todo.id === item.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n        editarCompleted(todo)\r\n    };\r\n\r\n\r\n    const editarCompleted = (tarea) =>{\r\n        bd.collection(\"todos\").doc(tarea.id).set({\r\n            ...tarea, completed: !tarea.completed\r\n        })\r\n        .then(() => {\r\n            console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? 'completed' : ''}`}>{todo.text}</li>\r\n            <button onClick={completeHandler} className={`complete-btn ${todo.completed ? 'completed-icon' : ''}`}>\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import Todo from './Todo'\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n                    {filteredTodos.map(todo => (\r\n                         <Todo \r\n                            todo={todo}  \r\n                            key={todo.id}  \r\n                            setTodos={setTodos}\r\n                            todos={todos}\r\n                        />  \r\n                    ))} \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form'\nimport TodoList from './components/TodoList'\nimport {bd} from './firebase-config';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  const traerDesdeFirebase = () =>{\n    bd.collection(\"todos\").get().then((querySnapshot) => {\n      const docs = [];\n      querySnapshot.forEach((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          // console.log(doc.id, \" => \", doc.data());\n          docs.push({...doc.data(), id:doc.id})\n      });\n      setTodos(docs);\n  });\n  }\n\n\n  useEffect(() => {\n    // const getLocalTodos = () => {\n    //   if (localStorage.getItem('todos') === null) {\n    //     localStorage.setItem('todos', JSON.stringify(todos))\n    //   } else {\n    //     const todoLocal = JSON.parse(localStorage.getItem('todos'))\n    //     setTodos(todoLocal)\n    //   }\n    // }\n    // getLocalTodos();\n    traerDesdeFirebase();\n  },[todos]);\n\n\n  useEffect(() => {\n    const filteredHandler = () => {\n      switch (status) {\n        case 'completed':\n          setFilteredTodos(todos.filter(tarea => tarea.completed === true))\n          break;\n        case 'uncompleted':\n          setFilteredTodos(todos.filter(tarea => tarea.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos);\n\n      }\n    }\n\n    //Local storage\n    // const saveLocalTodos = () => {\n    //   localStorage.setItem('todos', JSON.stringify(todos))\n    // }\n\n    filteredHandler();\n    // saveLocalTodos();\n  }, [status, todos])\n\n\n  return (\n    <div>\n      <header>\n        <h1>TODO LIST</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './firebase-config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}